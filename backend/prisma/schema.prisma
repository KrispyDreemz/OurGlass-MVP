// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  name           String
  email          String         @unique
  passwordHash   String
  role           String         // 'artist', 'sponsor', 'collector', 'admin'
  artworks       Artwork[]
  bids           Bid[]
  sponsorships   Sponsorship[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Artwork {
  id             Int             @id @default(autoincrement())
  artist         User            @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId       Int
  title          String
  description    String
  imageUrl       String
  status         String          // 'pending', 'active', 'sold'
  auctions       Auction[]
  sponsorships   Sponsorship[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Auction {
  id             Int             @id @default(autoincrement())
  artwork        Artwork         @relation(fields: [artworkId], references: [id], onDelete: Cascade)
  artworkId      Int
  type           String          // 'sponsorship' or 'ownership'
  startTime      DateTime
  endTime        DateTime
  reservePrice   Float
  bids           Bid[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@index([startTime])
}

model Bid {
  id             Int             @id @default(autoincrement())
  auction        Auction         @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  auctionId      Int
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int
  amount         Float
  createdAt      DateTime        @default(now())

  @@index([auctionId])
}

model Sponsorship {
  id             Int             @id @default(autoincrement())
  artwork        Artwork         @relation(fields: [artworkId], references: [id], onDelete: Cascade)
  artworkId      Int
  sponsor        User            @relation(fields: [sponsorId], references: [id], onDelete: Cascade)
  sponsorId      Int
  bidAmount      Float
  won            Boolean
  campaignUrl    String?
  createdAt      DateTime        @default(now())

  @@index([artworkId])
}
